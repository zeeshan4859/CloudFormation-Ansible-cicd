---
- name: Provision AWS
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Create DPStack
      cloudformation:
        stack_name: DPStack
        disable_rollback: true
        state: present
        template: "Stack_provisioning/main.yaml"
      register: stack_out

    - set_fact:
        instances_stack: instances_stack


    - name: get info
      amazon.aws.cloudformation_info:
        stack_name: instances_stackssss
      register: instances_stack_out

    - debug:
        msg: "{{ instances_stack_out.cloudformation[instances_stack].stack_outputs }}"

    - name: Insert/Update Hosts IP & Name in file provision-stack/group_vars/hostsip
      blockinfile:
        path: hostsip
        block: |
          JenkinsIP: "{{ instances_stack_out.cloudformation[instances_stack].stack_outputs.JenkinsInstancePrivateIP }}"


    # - name: Getting Instances Information 
    #   ec2_instance_info:
    #     region: us-east-2
    #     filters:
    #       "tag:stack": MyStack01
    #       instance-state-name: [ "running" ]
    #   register: ec2_list

    # - name: Insert/Update Hosts IP & Name in file provision-stack/group_vars/hostsip
    #   blockinfile:
    #     path: hostsip
    #     block: |
    #       web01_ip: {{ ec2_list.tagged_instances[0].private_ip }}

    # - name: Add instances to inventory
    #   add_host:
    #     name: "{{ item.public_dns_name }}"
    #     ansible_user: ec2-user
    #     host_key_checking: false
    #     groups: "aws,{{ item.tags.env }},{{ item.tags.app }}"
    #   no_log: true
    #   when: ec2_list.instances|length > 0
    #   loop: "{{ ec2_list['instances'] | flatten(levels=1) }}"