---
- name: Provision AWS
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Create DPStack
      cloudformation:
        stack_name: DPStack
        disable_rollback: true
        state: present
        template: "Stack_provisioning/main.yaml"
      register: stack_out

    - set_fact:
        instances_stack: DPStack-InstancesStack-74ZMMQDN7G0Z


    - name: get info
      amazon.aws.cloudformation_info:
        stack_name: DPStack-InstancesStack-74ZMMQDN7G0Z
      register: instances_stack_out

    - debug:
        msg: "{{ instances_stack_out.cloudformation[instances_stack].stack_outputs }}"

    - name: Insert/Update Hosts IP & Name in file provision-stack/group_vars/hostsip
      blockinfile:
        path: vars/hostsip
        block: |
          JenkinsIP: "{{ instances_stack_out.cloudformation[instances_stack].stack_outputs.JenkinsInstancePrivateIP }}"
          app01: "{{ instances_stack_out.cloudformation[instances_stack].stack_outputs.AppInstancePrivateIP }}"
          db01: "{{ instances_stack_out.cloudformation[instances_stack].stack_outputs.dbInstancePrivateIP }}"
          sonar: "{{ instances_stack_out.cloudformation[instances_stack].stack_outputs.SonarInstancePrivateIP }}"
          nuxes: "{{ instances_stack_out.cloudformation[instances_stack].stack_outputs.NuxesInstancePrivateIP }}"

    - name: Insert/Update Inventory file provision-stack/inventory-dp
      blockinfile:
        path: Stack_provisioning/inventory-vpro
        block: |
          app01 ansible_host="{{ instances_stack_out.cloudformation[instances_stack].stack_outputs.AppInstancePrivateIP }}"
          db01 ansible_host="{{ instances_stack_out.cloudformation[instances_stack].stack_outputs.dbInstancePrivateIP }}"
          snr ansible_host="{{ instances_stack_out.cloudformation[instances_stack].stack_outputs.SonarInstancePrivateIP }}"
          nxs ansible_host={{ instances_stack_out.cloudformation[instances_stack].stack_outputs.NuxesInstancePrivateIP }}"

          cntl ansible_host=127.0.0.1 ansible_connection=local
          [appsrvgrp]
          app01
          [dbsrvgrp]
          db01
          [snrsrvgrp]
          snr
          [nxssrvgrp]
          nxs
          [control]
          cntl
          [stack_inst:children]
          websrvgrp
          appsrvgrp
          snrsrvgrp
          nxssrvgrp

          
          [stack_inst:vars]
          ansible_user=ubuntu
          ansible_ssh_private_key_file=us-east-2.pem
          #ansible_python_interpreter=/usr/bin/python3

    # - name: Add instances to inventory
    #   add_host:
    #     name: "{{ item.public_dns_name }}"
    #     ansible_user: ec2-user
    #     host_key_checking: false
    #     groups: "aws,{{ item.tags.env }},{{ item.tags.app }}"
    #   no_log: true
    #   when: ec2_list.instances|length > 0
    #   loop: "{{ ec2_list['instances'] | flatten(levels=1) }}"